module test_uuid
  use funit
  implicit none
contains

  @test
  subroutine test_uuid_unique_each_time
    use fuuid4, only : generate_uuid, uuid_len
    character(len=uuid_len) :: uuid1, uuid2, uuid3, uuid4
    ! UUID generated from previous build, to check that PRNG is unique each runtime
    character(len=uuid_len), parameter :: previous_uuid = "55652F4C-454F-4261-AB69-750C1D151538"

    uuid1 = generate_uuid()
    uuid2 = generate_uuid()
    uuid3 = generate_uuid()
    uuid4 = generate_uuid()

    ! No assertNotEqual for characters for some reason
    @assertTrue(uuid1 /= previous_uuid)
    @assertTrue(uuid1 /= uuid2)
    @assertTrue(uuid1 /= uuid3)
    @assertTrue(uuid1 /= uuid4)
  end subroutine test_uuid_unique_each_time

  @test
  subroutine test_uuid_has_correct_version_variant
    use fuuid4, only : generate_uuid, uuid_len
    character(len=uuid_len) :: uuid
    character(len=1) :: version, variant

    uuid = generate_uuid()

    version = uuid(15:15)       ! 13th digit + two hyphens
    variant = uuid(20:20)       ! 17th digit + three hyphens

    @assertEqual(version, "4")
    @assertAny([variant == "8", variant == "9", variant == "A", variant == "B", variant == "a", variant == "b"])
  end subroutine test_uuid_has_correct_version_variant
end module test_uuid
